version: "3.8"
services:
  zookeeper:
    image: 'confluentinc/cp-zookeeper:6.2.0'
    container_name: 'zookeeper'
    networks:
      - broker-kafka
    ports:
      - '2181:2181'
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  kafka:
    image: 'confluentinc/cp-kafka:6.2.0'
    container_name: 'kafka'
    networks:
      - broker-kafka
    ports:
      - '9092:9092'
    expose:
      - '29092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
    depends_on:
      - zookeeper

  kafka-consumer:
    container_name: kafka-consumer
    networks:
      - broker-kafka
    build:
      context: .
      dockerfile: Dockerfile-consumer
    ports:
      - 3001:3001
    restart: "always"
    environment:
      INTERNAL_KAFKA_ADDR: kafka:29092
    depends_on:
      - zookeeper
      - kafka
      - kafka-producer

  kafka-producer:
    container_name: kafka-producer
    networks:
      - broker-kafka
    build:
      context: .
      dockerfile: Dockerfile-producer
    ports:
      - 3000:3000
    restart: "always"
    environment:
      INTERNAL_KAFKA_ADDR: kafka:29092
    depends_on:
      - zookeeper
      - kafka

networks:
  broker-kafka:
    driver: bridge